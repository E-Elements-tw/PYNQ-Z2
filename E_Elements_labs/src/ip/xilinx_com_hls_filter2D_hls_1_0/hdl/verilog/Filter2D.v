// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Filter2D (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_src_rows_V,
        p_src_cols_V,
        p_src_data_stream_V_dout,
        p_src_data_stream_V_empty_n,
        p_src_data_stream_V_read,
        p_dst_data_stream_V_din,
        p_dst_data_stream_V_full_n,
        p_dst_data_stream_V_write,
        p_kernel_val_0_V_0_dout,
        p_kernel_val_0_V_0_empty_n,
        p_kernel_val_0_V_0_read,
        p_kernel_val_0_V_1_dout,
        p_kernel_val_0_V_1_empty_n,
        p_kernel_val_0_V_1_read,
        p_kernel_val_0_V_2_dout,
        p_kernel_val_0_V_2_empty_n,
        p_kernel_val_0_V_2_read,
        p_kernel_val_1_V_0_dout,
        p_kernel_val_1_V_0_empty_n,
        p_kernel_val_1_V_0_read,
        p_kernel_val_1_V_1_dout,
        p_kernel_val_1_V_1_empty_n,
        p_kernel_val_1_V_1_read,
        p_kernel_val_1_V_2_dout,
        p_kernel_val_1_V_2_empty_n,
        p_kernel_val_1_V_2_read,
        p_kernel_val_2_V_0_dout,
        p_kernel_val_2_V_0_empty_n,
        p_kernel_val_2_V_0_read,
        p_kernel_val_2_V_1_dout,
        p_kernel_val_2_V_1_empty_n,
        p_kernel_val_2_V_1_read,
        p_kernel_val_2_V_2_dout,
        p_kernel_val_2_V_2_empty_n,
        p_kernel_val_2_V_2_read
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_state4 = 6'd8;
parameter    ap_ST_fsm_pp0_stage0 = 6'd16;
parameter    ap_ST_fsm_state16 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] p_src_rows_V;
input  [31:0] p_src_cols_V;
input  [7:0] p_src_data_stream_V_dout;
input   p_src_data_stream_V_empty_n;
output   p_src_data_stream_V_read;
output  [7:0] p_dst_data_stream_V_din;
input   p_dst_data_stream_V_full_n;
output   p_dst_data_stream_V_write;
input  [7:0] p_kernel_val_0_V_0_dout;
input   p_kernel_val_0_V_0_empty_n;
output   p_kernel_val_0_V_0_read;
input  [7:0] p_kernel_val_0_V_1_dout;
input   p_kernel_val_0_V_1_empty_n;
output   p_kernel_val_0_V_1_read;
input  [7:0] p_kernel_val_0_V_2_dout;
input   p_kernel_val_0_V_2_empty_n;
output   p_kernel_val_0_V_2_read;
input  [7:0] p_kernel_val_1_V_0_dout;
input   p_kernel_val_1_V_0_empty_n;
output   p_kernel_val_1_V_0_read;
input  [7:0] p_kernel_val_1_V_1_dout;
input   p_kernel_val_1_V_1_empty_n;
output   p_kernel_val_1_V_1_read;
input  [7:0] p_kernel_val_1_V_2_dout;
input   p_kernel_val_1_V_2_empty_n;
output   p_kernel_val_1_V_2_read;
input  [7:0] p_kernel_val_2_V_0_dout;
input   p_kernel_val_2_V_0_empty_n;
output   p_kernel_val_2_V_0_read;
input  [7:0] p_kernel_val_2_V_1_dout;
input   p_kernel_val_2_V_1_empty_n;
output   p_kernel_val_2_V_1_read;
input  [7:0] p_kernel_val_2_V_2_dout;
input   p_kernel_val_2_V_2_empty_n;
output   p_kernel_val_2_V_2_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_src_data_stream_V_read;
reg p_dst_data_stream_V_write;
reg p_kernel_val_0_V_0_read;
reg p_kernel_val_0_V_1_read;
reg p_kernel_val_0_V_2_read;
reg p_kernel_val_1_V_0_read;
reg p_kernel_val_1_V_1_read;
reg p_kernel_val_1_V_2_read;
reg p_kernel_val_2_V_0_read;
reg p_kernel_val_2_V_1_read;
reg p_kernel_val_2_V_2_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    p_src_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond388_i_i_reg_1730;
reg   [0:0] exitcond388_i_i_reg_1730_pp0_iter1_reg;
reg   [0:0] or_cond_i_i_i_reg_1762;
reg   [0:0] icmp_reg_1633;
reg   [0:0] tmp_2_i_reg_1628;
reg    p_dst_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter10;
reg   [0:0] or_cond_i_i_reg_1758;
reg   [0:0] or_cond_i_i_reg_1758_pp0_iter9_reg;
reg    p_kernel_val_0_V_0_blk_n;
reg    p_kernel_val_0_V_1_blk_n;
reg    p_kernel_val_0_V_2_blk_n;
reg    p_kernel_val_1_V_0_blk_n;
reg    p_kernel_val_1_V_1_blk_n;
reg    p_kernel_val_1_V_2_blk_n;
reg    p_kernel_val_2_V_0_blk_n;
reg    p_kernel_val_2_V_1_blk_n;
reg    p_kernel_val_2_V_2_blk_n;
reg   [31:0] t_V_1_reg_470;
reg   [7:0] reg_481;
wire    ap_block_state5_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
reg    ap_predicate_op176_read_state7;
reg    ap_predicate_op177_read_state7;
reg    ap_block_state7_pp0_stage0_iter2;
wire    ap_block_state8_pp0_stage0_iter3;
wire    ap_block_state9_pp0_stage0_iter4;
wire    ap_block_state10_pp0_stage0_iter5;
wire    ap_block_state11_pp0_stage0_iter6;
wire    ap_block_state12_pp0_stage0_iter7;
wire    ap_block_state13_pp0_stage0_iter8;
wire    ap_block_state14_pp0_stage0_iter9;
reg    ap_block_state15_pp0_stage0_iter10;
reg    ap_block_pp0_stage0_11001;
reg   [7:0] reg_481_pp0_iter3_reg;
reg    ap_block_state1;
wire   [31:0] tmp_i_fu_488_p2;
wire   [31:0] tmp_1_i_fu_494_p2;
wire   [31:0] p_neg393_i_i_fu_500_p2;
wire   [31:0] tmp_11_i_fu_506_p2;
wire   [31:0] tmp_135_i_fu_518_p2;
wire  signed [15:0] OP2_V_0_i_fu_524_p1;
reg  signed [15:0] OP2_V_0_i_reg_1570;
wire  signed [15:0] OP2_V_0_1_i_fu_528_p1;
reg  signed [15:0] OP2_V_0_1_i_reg_1575;
wire  signed [15:0] OP2_V_0_2_i_fu_532_p1;
reg  signed [15:0] OP2_V_0_2_i_reg_1580;
wire  signed [15:0] OP2_V_1_i_fu_536_p1;
reg  signed [15:0] OP2_V_1_i_reg_1585;
wire  signed [15:0] OP2_V_1_1_i_fu_540_p1;
reg  signed [15:0] OP2_V_1_1_i_reg_1590;
wire  signed [15:0] OP2_V_1_2_i_fu_544_p1;
reg  signed [15:0] OP2_V_1_2_i_reg_1595;
wire  signed [15:0] OP2_V_2_i_fu_548_p1;
reg  signed [15:0] OP2_V_2_i_reg_1600;
wire  signed [15:0] OP2_V_2_1_i_fu_552_p1;
reg  signed [15:0] OP2_V_2_1_i_reg_1605;
wire  signed [15:0] OP2_V_2_2_i_fu_556_p1;
reg  signed [15:0] OP2_V_2_2_i_reg_1610;
wire   [31:0] tmp_10_i_fu_566_p2;
wire   [31:0] i_V_fu_577_p2;
reg   [31:0] i_V_reg_1623;
wire    ap_CS_fsm_state2;
wire   [0:0] tmp_2_i_fu_583_p2;
wire   [0:0] exitcond389_i_i_fu_572_p2;
wire   [0:0] icmp_fu_598_p2;
wire   [0:0] tmp_93_i_fu_604_p2;
reg   [0:0] tmp_93_i_reg_1638;
wire   [0:0] tmp_93_1_i_fu_610_p2;
reg   [0:0] tmp_93_1_i_reg_1642;
wire   [0:0] tmp_115_i_fu_616_p2;
reg   [0:0] tmp_115_i_reg_1646;
wire   [31:0] tmp_118_i_fu_621_p2;
reg   [31:0] tmp_118_i_reg_1653;
wire   [31:0] p_p2_i425_i_i_fu_641_p3;
reg   [31:0] p_p2_i425_i_i_reg_1660;
wire   [31:0] p_assign_6_1_i_fu_649_p2;
reg   [31:0] p_assign_6_1_i_reg_1667;
wire   [31:0] p_p2_i425_i_1_i_fu_669_p3;
reg   [31:0] p_p2_i425_i_1_i_reg_1674;
wire   [31:0] p_assign_6_2_i_fu_677_p2;
reg   [31:0] p_assign_6_2_i_reg_1681;
wire   [31:0] p_p2_i425_i_2_i_fu_697_p3;
reg   [31:0] p_p2_i425_i_2_i_reg_1688;
wire   [31:0] y_1_i_fu_805_p3;
reg   [31:0] y_1_i_reg_1695;
wire    ap_CS_fsm_state3;
wire   [31:0] y_1_1_i_fu_819_p3;
reg   [31:0] y_1_1_i_reg_1700;
wire   [31:0] y_1_2_i_fu_833_p3;
reg   [31:0] y_1_2_i_reg_1705;
wire   [0:0] tmp_48_0_not_i_fu_840_p2;
reg   [0:0] tmp_48_0_not_i_reg_1710;
wire    ap_CS_fsm_state4;
wire   [1:0] tmp_20_fu_849_p1;
reg   [1:0] tmp_20_reg_1715;
wire   [1:0] tmp_21_fu_857_p1;
reg   [1:0] tmp_21_reg_1720;
wire   [1:0] tmp_22_fu_865_p1;
reg   [1:0] tmp_22_reg_1725;
wire   [0:0] exitcond388_i_i_fu_869_p2;
wire    ap_CS_fsm_pp0_stage0;
reg   [0:0] exitcond388_i_i_reg_1730_pp0_iter2_reg;
reg   [0:0] exitcond388_i_i_reg_1730_pp0_iter3_reg;
reg   [0:0] exitcond388_i_i_reg_1730_pp0_iter4_reg;
wire   [31:0] j_V_fu_874_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [31:0] ImagLoc_x_fu_896_p2;
reg   [31:0] ImagLoc_x_reg_1739;
reg   [0:0] tmp_24_reg_1745;
wire   [31:0] p_p2_i_i_i_fu_924_p3;
reg   [31:0] p_p2_i_i_i_reg_1751;
wire   [0:0] or_cond_i_i_fu_932_p2;
reg   [0:0] or_cond_i_i_reg_1758_pp0_iter1_reg;
reg   [0:0] or_cond_i_i_reg_1758_pp0_iter2_reg;
reg   [0:0] or_cond_i_i_reg_1758_pp0_iter3_reg;
reg   [0:0] or_cond_i_i_reg_1758_pp0_iter4_reg;
reg   [0:0] or_cond_i_i_reg_1758_pp0_iter5_reg;
reg   [0:0] or_cond_i_i_reg_1758_pp0_iter6_reg;
reg   [0:0] or_cond_i_i_reg_1758_pp0_iter7_reg;
reg   [0:0] or_cond_i_i_reg_1758_pp0_iter8_reg;
wire   [0:0] or_cond_i_i_i_fu_946_p2;
reg   [0:0] or_cond_i_i_i_reg_1762_pp0_iter2_reg;
reg   [0:0] or_cond_i_i_i_reg_1762_pp0_iter3_reg;
wire   [31:0] x_fu_984_p3;
reg   [31:0] x_reg_1766;
wire   [0:0] brmerge_i_fu_991_p2;
reg   [0:0] brmerge_i_reg_1772;
reg   [0:0] brmerge_i_reg_1772_pp0_iter2_reg;
reg   [10:0] k_buf_0_val_3_addr_reg_1779;
wire   [1:0] tmp_26_fu_1006_p1;
reg   [1:0] tmp_26_reg_1785;
reg   [10:0] k_buf_0_val_4_addr_reg_1792;
reg   [10:0] k_buf_0_val_4_addr_reg_1792_pp0_iter3_reg;
reg   [10:0] k_buf_0_val_5_addr_reg_1798;
reg   [10:0] k_buf_0_val_5_addr_reg_1798_pp0_iter3_reg;
wire   [7:0] k_buf_0_val_3_q0;
reg   [7:0] k_buf_0_val_3_load_reg_1804;
reg    ap_enable_reg_pp0_iter3;
wire   [7:0] col_buf_0_val_0_0_fu_1039_p3;
reg   [7:0] col_buf_0_val_0_0_reg_1809;
wire   [7:0] k_buf_0_val_4_q0;
reg   [7:0] k_buf_0_val_4_load_reg_1817;
wire   [7:0] col_buf_0_val_1_0_fu_1057_p3;
reg   [7:0] col_buf_0_val_1_0_reg_1822;
wire   [7:0] col_buf_0_val_2_0_fu_1075_p3;
reg   [7:0] col_buf_0_val_2_0_reg_1830;
wire   [7:0] src_kernel_win_0_va_6_fu_1126_p3;
reg   [7:0] src_kernel_win_0_va_6_reg_1838;
reg   [7:0] src_kernel_win_0_va_6_reg_1838_pp0_iter5_reg;
reg   [7:0] src_kernel_win_0_va_6_reg_1838_pp0_iter6_reg;
reg   [7:0] src_kernel_win_0_va_6_reg_1838_pp0_iter7_reg;
wire   [7:0] src_kernel_win_0_va_7_fu_1140_p3;
reg   [7:0] src_kernel_win_0_va_7_reg_1844;
reg   [7:0] src_kernel_win_0_va_7_reg_1844_pp0_iter5_reg;
reg   [7:0] src_kernel_win_0_va_7_reg_1844_pp0_iter6_reg;
reg   [7:0] src_kernel_win_0_va_16_reg_1864;
reg   [7:0] src_kernel_win_0_va_17_reg_1869;
wire   [15:0] r_V_2_0_i_fu_1210_p2;
reg  signed [15:0] r_V_2_0_i_reg_1874;
wire   [15:0] r_V_2_1_i_fu_1219_p2;
reg  signed [15:0] r_V_2_1_i_reg_1879;
wire   [15:0] r_V_2_2_1_i_fu_1232_p2;
reg  signed [15:0] r_V_2_2_1_i_reg_1889;
wire  signed [16:0] grp_fu_1417_p3;
reg  signed [16:0] p_Val2_4_0_1_i_reg_1894;
reg    ap_enable_reg_pp0_iter6;
wire  signed [16:0] grp_fu_1424_p3;
reg  signed [16:0] tmp9_reg_1900;
wire  signed [16:0] grp_fu_1431_p3;
reg  signed [16:0] tmp13_reg_1906;
wire   [17:0] p_Val2_4_1_i_fu_1276_p2;
reg   [17:0] p_Val2_4_1_i_reg_1911;
wire  signed [15:0] r_V_2_1_2_i_fu_1285_p2;
reg  signed [15:0] r_V_2_1_2_i_reg_1916;
wire   [7:0] tmp_29_fu_1290_p1;
reg   [7:0] tmp_29_reg_1921;
wire   [7:0] tmp_30_fu_1294_p1;
reg   [7:0] tmp_30_reg_1926;
wire  signed [17:0] grp_fu_1438_p3;
reg  signed [17:0] tmp14_reg_1931;
reg    ap_enable_reg_pp0_iter7;
wire   [7:0] tmp_31_fu_1301_p1;
reg   [7:0] tmp_31_reg_1936;
reg   [7:0] tmp_31_reg_1936_pp0_iter8_reg;
wire   [7:0] tmp_1_fu_1319_p2;
reg   [7:0] tmp_1_reg_1941;
wire   [18:0] p_Val2_4_2_1_i_fu_1323_p2;
reg   [18:0] p_Val2_4_2_1_i_reg_1946;
wire  signed [15:0] r_V_2_2_2_i_fu_1332_p2;
reg  signed [15:0] r_V_2_2_2_i_reg_1951;
wire   [7:0] tmp_32_fu_1337_p1;
reg   [7:0] tmp_32_reg_1956;
reg   [0:0] isneg_reg_1961;
wire   [7:0] p_Val2_1_fu_1365_p2;
reg   [7:0] p_Val2_1_reg_1967;
wire   [0:0] not_i_i_i_i_fu_1380_p2;
reg   [0:0] not_i_i_i_i_reg_1972;
reg    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter4;
reg    ap_condition_pp0_exit_iter3_state8;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
wire   [10:0] k_buf_0_val_3_address0;
reg    k_buf_0_val_3_ce0;
reg    k_buf_0_val_3_ce1;
reg    k_buf_0_val_3_we1;
wire   [10:0] k_buf_0_val_4_address0;
reg    k_buf_0_val_4_ce0;
reg    k_buf_0_val_4_ce1;
reg    k_buf_0_val_4_we1;
reg   [7:0] k_buf_0_val_4_d1;
wire   [10:0] k_buf_0_val_5_address0;
reg    k_buf_0_val_5_ce0;
wire   [7:0] k_buf_0_val_5_q0;
reg    k_buf_0_val_5_ce1;
reg    k_buf_0_val_5_we1;
reg   [7:0] k_buf_0_val_5_d1;
reg   [31:0] t_V_reg_459;
wire    ap_CS_fsm_state16;
wire   [63:0] tmp_58_i_fu_1000_p1;
reg    ap_block_pp0_stage0_01001;
reg   [7:0] src_kernel_win_0_va_fu_272;
reg   [7:0] src_kernel_win_0_va_1_fu_276;
reg   [7:0] src_kernel_win_0_va_2_fu_280;
reg   [7:0] src_kernel_win_0_va_3_fu_284;
reg   [7:0] src_kernel_win_0_va_4_fu_288;
wire   [7:0] src_kernel_win_0_va_8_fu_1154_p3;
reg   [7:0] src_kernel_win_0_va_5_fu_292;
reg   [7:0] right_border_buf_0_s_fu_296;
reg   [7:0] right_border_buf_0_1_fu_300;
reg   [7:0] right_border_buf_0_2_fu_304;
reg   [7:0] right_border_buf_0_3_fu_308;
reg   [7:0] right_border_buf_0_4_fu_312;
reg   [7:0] right_border_buf_0_5_fu_316;
wire   [31:0] tmp_fu_512_p2;
wire   [31:0] tmp_9_fu_560_p2;
wire   [30:0] tmp_11_fu_588_p4;
wire   [0:0] tmp_13_fu_627_p3;
wire   [31:0] p_assign_7_i_fu_635_p2;
wire   [0:0] tmp_17_fu_655_p3;
wire   [31:0] p_assign_7_1_i_fu_663_p2;
wire   [0:0] tmp_19_fu_683_p3;
wire   [31:0] p_assign_7_2_i_fu_691_p2;
wire   [0:0] tmp_12_fu_705_p3;
wire   [0:0] tmp_120_i_fu_718_p2;
wire   [0:0] rev_fu_712_p2;
wire   [0:0] tmp_16_fu_736_p3;
wire   [0:0] tmp_120_1_i_fu_749_p2;
wire   [0:0] rev1_fu_743_p2;
wire   [0:0] tmp_18_fu_767_p3;
wire   [0:0] tmp_120_2_i_fu_780_p2;
wire   [0:0] rev2_fu_774_p2;
wire   [0:0] tmp_132_i_fu_728_p2;
wire   [31:0] p_assign_8_i_fu_732_p2;
wire   [0:0] or_cond_i424_i_i_fu_722_p2;
wire   [31:0] p_p2_i425_i_i_p_assig_fu_798_p3;
wire   [0:0] tmp_132_1_i_fu_759_p2;
wire   [31:0] p_assign_8_1_i_fu_763_p2;
wire   [0:0] or_cond_i424_i_1_i_fu_753_p2;
wire   [31:0] p_p2_i425_i_1_i_p_ass_fu_812_p3;
wire   [0:0] tmp_132_2_i_fu_790_p2;
wire   [31:0] p_assign_8_2_i_fu_794_p2;
wire   [0:0] or_cond_i424_i_2_i_fu_784_p2;
wire   [31:0] p_p2_i425_i_2_i_p_ass_fu_826_p3;
wire   [31:0] row_assign_8_i_fu_845_p2;
wire   [31:0] row_assign_8_1_i_fu_853_p2;
wire   [31:0] row_assign_8_2_i_fu_861_p2;
wire   [30:0] tmp_23_fu_880_p4;
wire   [0:0] tmp_25_fu_910_p3;
wire   [31:0] p_assign_1_fu_918_p2;
wire   [0:0] icmp1_fu_890_p2;
wire   [0:0] tmp_6_i_fu_942_p2;
wire   [0:0] rev3_fu_937_p2;
wire   [31:0] p_assign_2_fu_956_p2;
wire   [0:0] tmp_6_i_not_fu_967_p2;
wire   [0:0] tmp_8_i_fu_952_p2;
wire   [0:0] sel_tmp7_fu_973_p2;
wire   [0:0] sel_tmp8_fu_978_p2;
wire   [31:0] p_assign_3_fu_960_p3;
wire   [31:0] col_assign_1_fu_996_p2;
wire   [7:0] tmp_3_fu_1028_p5;
wire   [7:0] tmp_4_fu_1046_p5;
wire   [7:0] tmp_5_fu_1064_p5;
wire   [7:0] tmp_6_fu_1118_p5;
wire   [7:0] tmp_7_fu_1132_p5;
wire   [7:0] tmp_8_fu_1146_p5;
wire   [7:0] r_V_2_0_i_fu_1210_p0;
wire  signed [7:0] r_V_2_0_i_fu_1210_p1;
wire   [7:0] r_V_2_1_i_fu_1219_p0;
wire  signed [7:0] r_V_2_1_i_fu_1219_p1;
wire   [7:0] r_V_2_2_1_i_fu_1232_p0;
wire  signed [7:0] r_V_2_2_1_i_fu_1232_p1;
wire  signed [17:0] p_Val2_4_0_1_cast_s_fu_1266_p1;
wire  signed [17:0] tmp19_cast_fu_1269_p1;
wire   [7:0] r_V_2_1_2_i_fu_1285_p0;
wire  signed [7:0] r_V_2_1_2_i_fu_1285_p1;
(* use_dsp48 = "no" *) wire   [16:0] tmp_s_fu_1272_p2;
wire  signed [18:0] tmp_140_1_2_cast_i_fu_1307_p1;
wire  signed [18:0] p_Val2_4_1_cast_i_fu_1304_p1;
wire   [18:0] tmp12_fu_1310_p2;
wire  signed [18:0] tmp23_cast_fu_1316_p1;
wire   [7:0] r_V_2_2_2_i_fu_1332_p0;
wire  signed [7:0] r_V_2_2_2_i_fu_1332_p1;
wire  signed [19:0] tmp_140_2_2_i_fu_1344_p1;
wire  signed [19:0] p_Val2_4_2_1_cast_s_fu_1341_p1;
wire   [19:0] p_Val2_2_fu_1351_p2;
wire   [7:0] tmp_2_fu_1347_p2;
wire   [11:0] p_Result_3_i_i_i_fu_1370_p4;
wire   [0:0] tmp_2_i_i_i_fu_1386_p2;
wire   [0:0] overflow_fu_1391_p2;
wire   [0:0] tmp_i_i_i_fu_1404_p2;
wire   [7:0] p_mux_i_i_cast_i_fu_1396_p3;
wire   [7:0] grp_fu_1417_p0;
wire  signed [7:0] grp_fu_1417_p1;
wire   [7:0] grp_fu_1424_p0;
wire  signed [7:0] grp_fu_1424_p1;
wire   [7:0] grp_fu_1431_p0;
wire  signed [7:0] grp_fu_1431_p1;
wire   [7:0] grp_fu_1438_p0;
wire  signed [7:0] grp_fu_1438_p1;
reg    grp_fu_1417_ce;
reg    grp_fu_1424_ce;
reg    grp_fu_1431_ce;
reg    grp_fu_1438_ce;
reg   [5:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [15:0] grp_fu_1417_p00;
wire   [15:0] grp_fu_1424_p00;
wire   [15:0] grp_fu_1431_p00;
wire   [15:0] grp_fu_1438_p00;
wire   [15:0] r_V_2_0_i_fu_1210_p00;
wire   [15:0] r_V_2_1_2_i_fu_1285_p00;
wire   [15:0] r_V_2_1_i_fu_1219_p00;
wire   [15:0] r_V_2_2_1_i_fu_1232_p00;
wire   [15:0] r_V_2_2_2_i_fu_1332_p00;
reg    ap_condition_1268;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
end

Filter2D_k_buf_0_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
k_buf_0_val_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_3_address0),
    .ce0(k_buf_0_val_3_ce0),
    .q0(k_buf_0_val_3_q0),
    .address1(k_buf_0_val_3_addr_reg_1779),
    .ce1(k_buf_0_val_3_ce1),
    .we1(k_buf_0_val_3_we1),
    .d1(reg_481)
);

Filter2D_k_buf_0_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
k_buf_0_val_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_4_address0),
    .ce0(k_buf_0_val_4_ce0),
    .q0(k_buf_0_val_4_q0),
    .address1(k_buf_0_val_4_addr_reg_1792_pp0_iter3_reg),
    .ce1(k_buf_0_val_4_ce1),
    .we1(k_buf_0_val_4_we1),
    .d1(k_buf_0_val_4_d1)
);

Filter2D_k_buf_0_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
k_buf_0_val_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_5_address0),
    .ce0(k_buf_0_val_5_ce0),
    .q0(k_buf_0_val_5_q0),
    .address1(k_buf_0_val_5_addr_reg_1798_pp0_iter3_reg),
    .ce1(k_buf_0_val_5_ce1),
    .we1(k_buf_0_val_5_we1),
    .d1(k_buf_0_val_5_d1)
);

filter2D_hls_mux_g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
filter2D_hls_mux_g8j_U25(
    .din0(right_border_buf_0_s_fu_296),
    .din1(right_border_buf_0_1_fu_300),
    .din2(8'd0),
    .din3(tmp_26_reg_1785),
    .dout(tmp_3_fu_1028_p5)
);

filter2D_hls_mux_g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
filter2D_hls_mux_g8j_U26(
    .din0(right_border_buf_0_3_fu_308),
    .din1(right_border_buf_0_4_fu_312),
    .din2(8'd0),
    .din3(tmp_26_reg_1785),
    .dout(tmp_4_fu_1046_p5)
);

filter2D_hls_mux_g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
filter2D_hls_mux_g8j_U27(
    .din0(right_border_buf_0_5_fu_316),
    .din1(right_border_buf_0_2_fu_304),
    .din2(8'd0),
    .din3(tmp_26_reg_1785),
    .dout(tmp_5_fu_1064_p5)
);

filter2D_hls_mux_g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
filter2D_hls_mux_g8j_U28(
    .din0(col_buf_0_val_0_0_reg_1809),
    .din1(col_buf_0_val_1_0_reg_1822),
    .din2(col_buf_0_val_2_0_reg_1830),
    .din3(tmp_20_reg_1715),
    .dout(tmp_6_fu_1118_p5)
);

filter2D_hls_mux_g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
filter2D_hls_mux_g8j_U29(
    .din0(col_buf_0_val_0_0_reg_1809),
    .din1(col_buf_0_val_1_0_reg_1822),
    .din2(col_buf_0_val_2_0_reg_1830),
    .din3(tmp_21_reg_1720),
    .dout(tmp_7_fu_1132_p5)
);

filter2D_hls_mux_g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
filter2D_hls_mux_g8j_U30(
    .din0(col_buf_0_val_0_0_reg_1809),
    .din1(col_buf_0_val_1_0_reg_1822),
    .din2(col_buf_0_val_2_0_reg_1830),
    .din3(tmp_22_reg_1725),
    .dout(tmp_8_fu_1146_p5)
);

filter2D_hls_mac_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
filter2D_hls_mac_hbi_U31(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1417_p0),
    .din1(grp_fu_1417_p1),
    .din2(r_V_2_0_i_reg_1874),
    .ce(grp_fu_1417_ce),
    .dout(grp_fu_1417_p3)
);

filter2D_hls_mac_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
filter2D_hls_mac_hbi_U32(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1424_p0),
    .din1(grp_fu_1424_p1),
    .din2(r_V_2_1_i_reg_1879),
    .ce(grp_fu_1424_ce),
    .dout(grp_fu_1424_p3)
);

filter2D_hls_mac_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
filter2D_hls_mac_hbi_U33(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1431_p0),
    .din1(grp_fu_1431_p1),
    .din2(r_V_2_2_1_i_reg_1889),
    .ce(grp_fu_1431_ce),
    .dout(grp_fu_1431_p3)
);

filter2D_hls_mac_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 17 ),
    .dout_WIDTH( 18 ))
filter2D_hls_mac_ibs_U34(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1438_p0),
    .din1(grp_fu_1438_p1),
    .din2(tmp13_reg_1906),
    .ce(grp_fu_1438_ce),
    .dout(grp_fu_1438_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((exitcond389_i_i_fu_572_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((exitcond388_i_i_fu_869_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp0_iter10 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter3_state8)) begin
                ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter2;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_i_fu_869_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        t_V_1_reg_470 <= j_V_fu_874_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        t_V_1_reg_470 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        t_V_reg_459 <= i_V_reg_1623;
    end else if ((~((p_kernel_val_2_V_2_empty_n == 1'b0) | (p_kernel_val_2_V_1_empty_n == 1'b0) | (p_kernel_val_2_V_0_empty_n == 1'b0) | (p_kernel_val_1_V_2_empty_n == 1'b0) | (p_kernel_val_1_V_1_empty_n == 1'b0) | (p_kernel_val_1_V_0_empty_n == 1'b0) | (p_kernel_val_0_V_2_empty_n == 1'b0) | (p_kernel_val_0_V_1_empty_n == 1'b0) | (p_kernel_val_0_V_0_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        t_V_reg_459 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_i_fu_869_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ImagLoc_x_reg_1739 <= ImagLoc_x_fu_896_p2;
        or_cond_i_i_reg_1758 <= or_cond_i_i_fu_932_p2;
        p_p2_i_i_i_reg_1751 <= p_p2_i_i_i_fu_924_p3;
        tmp_24_reg_1745 <= ImagLoc_x_fu_896_p2[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if ((~((p_kernel_val_2_V_2_empty_n == 1'b0) | (p_kernel_val_2_V_1_empty_n == 1'b0) | (p_kernel_val_2_V_0_empty_n == 1'b0) | (p_kernel_val_1_V_2_empty_n == 1'b0) | (p_kernel_val_1_V_1_empty_n == 1'b0) | (p_kernel_val_1_V_0_empty_n == 1'b0) | (p_kernel_val_0_V_2_empty_n == 1'b0) | (p_kernel_val_0_V_1_empty_n == 1'b0) | (p_kernel_val_0_V_0_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        OP2_V_0_1_i_reg_1575 <= OP2_V_0_1_i_fu_528_p1;
        OP2_V_0_2_i_reg_1580 <= OP2_V_0_2_i_fu_532_p1;
        OP2_V_0_i_reg_1570 <= OP2_V_0_i_fu_524_p1;
        OP2_V_1_1_i_reg_1590 <= OP2_V_1_1_i_fu_540_p1;
        OP2_V_1_2_i_reg_1595 <= OP2_V_1_2_i_fu_544_p1;
        OP2_V_1_i_reg_1585 <= OP2_V_1_i_fu_536_p1;
        OP2_V_2_1_i_reg_1605 <= OP2_V_2_1_i_fu_552_p1;
        OP2_V_2_2_i_reg_1610 <= OP2_V_2_2_i_fu_556_p1;
        OP2_V_2_i_reg_1600 <= OP2_V_2_i_fu_548_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_i_reg_1730 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        brmerge_i_reg_1772 <= brmerge_i_fu_991_p2;
        or_cond_i_i_i_reg_1762 <= or_cond_i_i_i_fu_946_p2;
        x_reg_1766 <= x_fu_984_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        brmerge_i_reg_1772_pp0_iter2_reg <= brmerge_i_reg_1772;
        exitcond388_i_i_reg_1730_pp0_iter2_reg <= exitcond388_i_i_reg_1730_pp0_iter1_reg;
        exitcond388_i_i_reg_1730_pp0_iter3_reg <= exitcond388_i_i_reg_1730_pp0_iter2_reg;
        exitcond388_i_i_reg_1730_pp0_iter4_reg <= exitcond388_i_i_reg_1730_pp0_iter3_reg;
        k_buf_0_val_4_addr_reg_1792_pp0_iter3_reg <= k_buf_0_val_4_addr_reg_1792;
        k_buf_0_val_5_addr_reg_1798_pp0_iter3_reg <= k_buf_0_val_5_addr_reg_1798;
        or_cond_i_i_i_reg_1762_pp0_iter2_reg <= or_cond_i_i_i_reg_1762;
        or_cond_i_i_i_reg_1762_pp0_iter3_reg <= or_cond_i_i_i_reg_1762_pp0_iter2_reg;
        or_cond_i_i_reg_1758_pp0_iter2_reg <= or_cond_i_i_reg_1758_pp0_iter1_reg;
        or_cond_i_i_reg_1758_pp0_iter3_reg <= or_cond_i_i_reg_1758_pp0_iter2_reg;
        or_cond_i_i_reg_1758_pp0_iter4_reg <= or_cond_i_i_reg_1758_pp0_iter3_reg;
        or_cond_i_i_reg_1758_pp0_iter5_reg <= or_cond_i_i_reg_1758_pp0_iter4_reg;
        or_cond_i_i_reg_1758_pp0_iter6_reg <= or_cond_i_i_reg_1758_pp0_iter5_reg;
        or_cond_i_i_reg_1758_pp0_iter7_reg <= or_cond_i_i_reg_1758_pp0_iter6_reg;
        or_cond_i_i_reg_1758_pp0_iter8_reg <= or_cond_i_i_reg_1758_pp0_iter7_reg;
        or_cond_i_i_reg_1758_pp0_iter9_reg <= or_cond_i_i_reg_1758_pp0_iter8_reg;
        reg_481_pp0_iter3_reg <= reg_481;
        src_kernel_win_0_va_6_reg_1838 <= src_kernel_win_0_va_6_fu_1126_p3;
        src_kernel_win_0_va_6_reg_1838_pp0_iter5_reg <= src_kernel_win_0_va_6_reg_1838;
        src_kernel_win_0_va_6_reg_1838_pp0_iter6_reg <= src_kernel_win_0_va_6_reg_1838_pp0_iter5_reg;
        src_kernel_win_0_va_6_reg_1838_pp0_iter7_reg <= src_kernel_win_0_va_6_reg_1838_pp0_iter6_reg;
        src_kernel_win_0_va_7_reg_1844 <= src_kernel_win_0_va_7_fu_1140_p3;
        src_kernel_win_0_va_7_reg_1844_pp0_iter5_reg <= src_kernel_win_0_va_7_reg_1844;
        src_kernel_win_0_va_7_reg_1844_pp0_iter6_reg <= src_kernel_win_0_va_7_reg_1844_pp0_iter5_reg;
        tmp_31_reg_1936_pp0_iter8_reg <= tmp_31_reg_1936;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_i_reg_1730_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        col_buf_0_val_0_0_reg_1809 <= col_buf_0_val_0_0_fu_1039_p3;
        col_buf_0_val_1_0_reg_1822 <= col_buf_0_val_1_0_fu_1057_p3;
        col_buf_0_val_2_0_reg_1830 <= col_buf_0_val_2_0_fu_1075_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond388_i_i_reg_1730 <= exitcond388_i_i_fu_869_p2;
        exitcond388_i_i_reg_1730_pp0_iter1_reg <= exitcond388_i_i_reg_1730;
        or_cond_i_i_reg_1758_pp0_iter1_reg <= or_cond_i_i_reg_1758;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_V_reg_1623 <= i_V_fu_577_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond389_i_i_fu_572_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_reg_1633 <= icmp_fu_598_p2;
        p_assign_6_1_i_reg_1667 <= p_assign_6_1_i_fu_649_p2;
        p_assign_6_2_i_reg_1681 <= p_assign_6_2_i_fu_677_p2;
        p_p2_i425_i_1_i_reg_1674 <= p_p2_i425_i_1_i_fu_669_p3;
        p_p2_i425_i_2_i_reg_1688 <= p_p2_i425_i_2_i_fu_697_p3;
        p_p2_i425_i_i_reg_1660 <= p_p2_i425_i_i_fu_641_p3;
        tmp_115_i_reg_1646 <= tmp_115_i_fu_616_p2;
        tmp_118_i_reg_1653 <= tmp_118_i_fu_621_p2;
        tmp_2_i_reg_1628 <= tmp_2_i_fu_583_p2;
        tmp_93_1_i_reg_1642 <= tmp_93_1_i_fu_610_p2;
        tmp_93_i_reg_1638 <= tmp_93_i_fu_604_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_i_reg_1758_pp0_iter8_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        isneg_reg_1961 <= p_Val2_2_fu_1351_p2[32'd19];
        not_i_i_i_i_reg_1972 <= not_i_i_i_i_fu_1380_p2;
        p_Val2_1_reg_1967 <= p_Val2_1_fu_1365_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_i_reg_1730_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_3_addr_reg_1779 <= tmp_58_i_fu_1000_p1;
        k_buf_0_val_4_addr_reg_1792 <= tmp_58_i_fu_1000_p1;
        k_buf_0_val_5_addr_reg_1798 <= tmp_58_i_fu_1000_p1;
        tmp_26_reg_1785 <= tmp_26_fu_1006_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_i_reg_1730_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_3_load_reg_1804 <= k_buf_0_val_3_q0;
        k_buf_0_val_4_load_reg_1817 <= k_buf_0_val_4_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_i_reg_1758_pp0_iter5_reg == 1'd1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_4_0_1_i_reg_1894 <= grp_fu_1417_p3;
        tmp13_reg_1906 <= grp_fu_1431_p3;
        tmp9_reg_1900 <= grp_fu_1424_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_i_reg_1758_pp0_iter6_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_4_1_i_reg_1911 <= p_Val2_4_1_i_fu_1276_p2;
        r_V_2_1_2_i_reg_1916 <= r_V_2_1_2_i_fu_1285_p2;
        tmp_29_reg_1921 <= tmp_29_fu_1290_p1;
        tmp_30_reg_1926 <= tmp_30_fu_1294_p1;
        tmp_31_reg_1936 <= tmp_31_fu_1301_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_i_reg_1758_pp0_iter7_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_4_2_1_i_reg_1946 <= p_Val2_4_2_1_i_fu_1323_p2;
        r_V_2_2_2_i_reg_1951 <= r_V_2_2_2_i_fu_1332_p2;
        tmp_1_reg_1941 <= tmp_1_fu_1319_p2;
        tmp_32_reg_1956 <= tmp_32_fu_1337_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_i_reg_1758_pp0_iter4_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        r_V_2_0_i_reg_1874 <= r_V_2_0_i_fu_1210_p2;
        r_V_2_1_i_reg_1879 <= r_V_2_1_i_fu_1219_p2;
        r_V_2_2_1_i_reg_1889 <= r_V_2_2_1_i_fu_1232_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_predicate_op177_read_state7 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_predicate_op176_read_state7 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        reg_481 <= p_src_data_stream_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_2_i_reg_1628 == 1'd1) & (icmp_reg_1633 == 1'd1) & (or_cond_i_i_i_reg_1762_pp0_iter2_reg == 1'd1) & (exitcond388_i_i_reg_1730_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        right_border_buf_0_1_fu_300 <= right_border_buf_0_s_fu_296;
        right_border_buf_0_2_fu_304 <= right_border_buf_0_5_fu_316;
        right_border_buf_0_3_fu_308 <= col_buf_0_val_1_0_fu_1057_p3;
        right_border_buf_0_4_fu_312 <= right_border_buf_0_3_fu_308;
        right_border_buf_0_5_fu_316 <= col_buf_0_val_2_0_fu_1075_p3;
        right_border_buf_0_s_fu_296 <= col_buf_0_val_0_0_fu_1039_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_i_reg_1730_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_16_reg_1864 <= src_kernel_win_0_va_2_fu_280;
        src_kernel_win_0_va_17_reg_1869 <= src_kernel_win_0_va_4_fu_288;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_i_reg_1730_pp0_iter4_reg == 1'd0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_1_fu_276 <= src_kernel_win_0_va_fu_272;
        src_kernel_win_0_va_3_fu_284 <= src_kernel_win_0_va_16_reg_1864;
        src_kernel_win_0_va_5_fu_292 <= src_kernel_win_0_va_17_reg_1869;
        src_kernel_win_0_va_fu_272 <= src_kernel_win_0_va_6_reg_1838;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_i_reg_1730_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_2_fu_280 <= src_kernel_win_0_va_7_fu_1140_p3;
        src_kernel_win_0_va_4_fu_288 <= src_kernel_win_0_va_8_fu_1154_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_i_reg_1758_pp0_iter6_reg == 1'd1) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp14_reg_1931 <= grp_fu_1438_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_115_i_reg_1646 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_20_reg_1715 <= tmp_20_fu_849_p1;
        tmp_21_reg_1720 <= tmp_21_fu_857_p1;
        tmp_22_reg_1725 <= tmp_22_fu_865_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_48_0_not_i_reg_1710 <= tmp_48_0_not_i_fu_840_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_115_i_reg_1646 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        y_1_1_i_reg_1700 <= y_1_1_i_fu_819_p3;
        y_1_2_i_reg_1705 <= y_1_2_i_fu_833_p3;
        y_1_i_reg_1695 <= y_1_i_fu_805_p3;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_condition_pp0_exit_iter3_state8 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter3_state8 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond389_i_i_fu_572_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond389_i_i_fu_572_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1417_ce = 1'b1;
    end else begin
        grp_fu_1417_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1424_ce = 1'b1;
    end else begin
        grp_fu_1424_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1431_ce = 1'b1;
    end else begin
        grp_fu_1431_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1438_ce = 1'b1;
    end else begin
        grp_fu_1438_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_3_ce0 = 1'b1;
    end else begin
        k_buf_0_val_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_2_i_reg_1628 == 1'd1) & (icmp_reg_1633 == 1'd1) & (or_cond_i_i_i_reg_1762_pp0_iter2_reg == 1'd1) & (exitcond388_i_i_reg_1730_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((or_cond_i_i_i_reg_1762_pp0_iter2_reg == 1'd1) & (tmp_93_i_reg_1638 == 1'd1) & (icmp_reg_1633 == 1'd0) & (exitcond388_i_i_reg_1730_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_3_ce1 = 1'b1;
    end else begin
        k_buf_0_val_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_2_i_reg_1628 == 1'd1) & (icmp_reg_1633 == 1'd1) & (or_cond_i_i_i_reg_1762_pp0_iter2_reg == 1'd1) & (exitcond388_i_i_reg_1730_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((or_cond_i_i_i_reg_1762_pp0_iter2_reg == 1'd1) & (tmp_93_i_reg_1638 == 1'd1) & (icmp_reg_1633 == 1'd0) & (exitcond388_i_i_reg_1730_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_3_we1 = 1'b1;
    end else begin
        k_buf_0_val_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_4_ce0 = 1'b1;
    end else begin
        k_buf_0_val_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_2_i_reg_1628 == 1'd1) & (icmp_reg_1633 == 1'd1) & (or_cond_i_i_i_reg_1762_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((or_cond_i_i_i_reg_1762_pp0_iter3_reg == 1'd1) & (tmp_93_1_i_reg_1642 == 1'd1) & (icmp_reg_1633 == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_4_ce1 = 1'b1;
    end else begin
        k_buf_0_val_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1268)) begin
        if (((tmp_2_i_reg_1628 == 1'd1) & (icmp_reg_1633 == 1'd1))) begin
            k_buf_0_val_4_d1 = k_buf_0_val_3_load_reg_1804;
        end else if (((tmp_93_1_i_reg_1642 == 1'd1) & (icmp_reg_1633 == 1'd0))) begin
            k_buf_0_val_4_d1 = reg_481_pp0_iter3_reg;
        end else begin
            k_buf_0_val_4_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_4_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_2_i_reg_1628 == 1'd1) & (icmp_reg_1633 == 1'd1) & (or_cond_i_i_i_reg_1762_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((or_cond_i_i_i_reg_1762_pp0_iter3_reg == 1'd1) & (tmp_93_1_i_reg_1642 == 1'd1) & (icmp_reg_1633 == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_4_we1 = 1'b1;
    end else begin
        k_buf_0_val_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_5_ce0 = 1'b1;
    end else begin
        k_buf_0_val_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_2_i_reg_1628 == 1'd1) & (icmp_reg_1633 == 1'd1) & (or_cond_i_i_i_reg_1762_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((or_cond_i_i_i_reg_1762_pp0_iter3_reg == 1'd1) & (tmp_93_i_reg_1638 == 1'd1) & (icmp_reg_1633 == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_5_ce1 = 1'b1;
    end else begin
        k_buf_0_val_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1268)) begin
        if (((tmp_2_i_reg_1628 == 1'd1) & (icmp_reg_1633 == 1'd1))) begin
            k_buf_0_val_5_d1 = k_buf_0_val_4_load_reg_1817;
        end else if (((tmp_93_i_reg_1638 == 1'd1) & (icmp_reg_1633 == 1'd0))) begin
            k_buf_0_val_5_d1 = reg_481_pp0_iter3_reg;
        end else begin
            k_buf_0_val_5_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_5_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_2_i_reg_1628 == 1'd1) & (icmp_reg_1633 == 1'd1) & (or_cond_i_i_i_reg_1762_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((or_cond_i_i_i_reg_1762_pp0_iter3_reg == 1'd1) & (tmp_93_i_reg_1638 == 1'd1) & (icmp_reg_1633 == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_5_we1 = 1'b1;
    end else begin
        k_buf_0_val_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((or_cond_i_i_reg_1758_pp0_iter9_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        p_dst_data_stream_V_blk_n = p_dst_data_stream_V_full_n;
    end else begin
        p_dst_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((or_cond_i_i_reg_1758_pp0_iter9_reg == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_dst_data_stream_V_write = 1'b1;
    end else begin
        p_dst_data_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_0_V_0_blk_n = p_kernel_val_0_V_0_empty_n;
    end else begin
        p_kernel_val_0_V_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_kernel_val_2_V_2_empty_n == 1'b0) | (p_kernel_val_2_V_1_empty_n == 1'b0) | (p_kernel_val_2_V_0_empty_n == 1'b0) | (p_kernel_val_1_V_2_empty_n == 1'b0) | (p_kernel_val_1_V_1_empty_n == 1'b0) | (p_kernel_val_1_V_0_empty_n == 1'b0) | (p_kernel_val_0_V_2_empty_n == 1'b0) | (p_kernel_val_0_V_1_empty_n == 1'b0) | (p_kernel_val_0_V_0_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_0_V_0_read = 1'b1;
    end else begin
        p_kernel_val_0_V_0_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_0_V_1_blk_n = p_kernel_val_0_V_1_empty_n;
    end else begin
        p_kernel_val_0_V_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_kernel_val_2_V_2_empty_n == 1'b0) | (p_kernel_val_2_V_1_empty_n == 1'b0) | (p_kernel_val_2_V_0_empty_n == 1'b0) | (p_kernel_val_1_V_2_empty_n == 1'b0) | (p_kernel_val_1_V_1_empty_n == 1'b0) | (p_kernel_val_1_V_0_empty_n == 1'b0) | (p_kernel_val_0_V_2_empty_n == 1'b0) | (p_kernel_val_0_V_1_empty_n == 1'b0) | (p_kernel_val_0_V_0_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_0_V_1_read = 1'b1;
    end else begin
        p_kernel_val_0_V_1_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_0_V_2_blk_n = p_kernel_val_0_V_2_empty_n;
    end else begin
        p_kernel_val_0_V_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_kernel_val_2_V_2_empty_n == 1'b0) | (p_kernel_val_2_V_1_empty_n == 1'b0) | (p_kernel_val_2_V_0_empty_n == 1'b0) | (p_kernel_val_1_V_2_empty_n == 1'b0) | (p_kernel_val_1_V_1_empty_n == 1'b0) | (p_kernel_val_1_V_0_empty_n == 1'b0) | (p_kernel_val_0_V_2_empty_n == 1'b0) | (p_kernel_val_0_V_1_empty_n == 1'b0) | (p_kernel_val_0_V_0_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_0_V_2_read = 1'b1;
    end else begin
        p_kernel_val_0_V_2_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_1_V_0_blk_n = p_kernel_val_1_V_0_empty_n;
    end else begin
        p_kernel_val_1_V_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_kernel_val_2_V_2_empty_n == 1'b0) | (p_kernel_val_2_V_1_empty_n == 1'b0) | (p_kernel_val_2_V_0_empty_n == 1'b0) | (p_kernel_val_1_V_2_empty_n == 1'b0) | (p_kernel_val_1_V_1_empty_n == 1'b0) | (p_kernel_val_1_V_0_empty_n == 1'b0) | (p_kernel_val_0_V_2_empty_n == 1'b0) | (p_kernel_val_0_V_1_empty_n == 1'b0) | (p_kernel_val_0_V_0_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_1_V_0_read = 1'b1;
    end else begin
        p_kernel_val_1_V_0_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_1_V_1_blk_n = p_kernel_val_1_V_1_empty_n;
    end else begin
        p_kernel_val_1_V_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_kernel_val_2_V_2_empty_n == 1'b0) | (p_kernel_val_2_V_1_empty_n == 1'b0) | (p_kernel_val_2_V_0_empty_n == 1'b0) | (p_kernel_val_1_V_2_empty_n == 1'b0) | (p_kernel_val_1_V_1_empty_n == 1'b0) | (p_kernel_val_1_V_0_empty_n == 1'b0) | (p_kernel_val_0_V_2_empty_n == 1'b0) | (p_kernel_val_0_V_1_empty_n == 1'b0) | (p_kernel_val_0_V_0_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_1_V_1_read = 1'b1;
    end else begin
        p_kernel_val_1_V_1_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_1_V_2_blk_n = p_kernel_val_1_V_2_empty_n;
    end else begin
        p_kernel_val_1_V_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_kernel_val_2_V_2_empty_n == 1'b0) | (p_kernel_val_2_V_1_empty_n == 1'b0) | (p_kernel_val_2_V_0_empty_n == 1'b0) | (p_kernel_val_1_V_2_empty_n == 1'b0) | (p_kernel_val_1_V_1_empty_n == 1'b0) | (p_kernel_val_1_V_0_empty_n == 1'b0) | (p_kernel_val_0_V_2_empty_n == 1'b0) | (p_kernel_val_0_V_1_empty_n == 1'b0) | (p_kernel_val_0_V_0_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_1_V_2_read = 1'b1;
    end else begin
        p_kernel_val_1_V_2_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_2_V_0_blk_n = p_kernel_val_2_V_0_empty_n;
    end else begin
        p_kernel_val_2_V_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_kernel_val_2_V_2_empty_n == 1'b0) | (p_kernel_val_2_V_1_empty_n == 1'b0) | (p_kernel_val_2_V_0_empty_n == 1'b0) | (p_kernel_val_1_V_2_empty_n == 1'b0) | (p_kernel_val_1_V_1_empty_n == 1'b0) | (p_kernel_val_1_V_0_empty_n == 1'b0) | (p_kernel_val_0_V_2_empty_n == 1'b0) | (p_kernel_val_0_V_1_empty_n == 1'b0) | (p_kernel_val_0_V_0_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_2_V_0_read = 1'b1;
    end else begin
        p_kernel_val_2_V_0_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_2_V_1_blk_n = p_kernel_val_2_V_1_empty_n;
    end else begin
        p_kernel_val_2_V_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_kernel_val_2_V_2_empty_n == 1'b0) | (p_kernel_val_2_V_1_empty_n == 1'b0) | (p_kernel_val_2_V_0_empty_n == 1'b0) | (p_kernel_val_1_V_2_empty_n == 1'b0) | (p_kernel_val_1_V_1_empty_n == 1'b0) | (p_kernel_val_1_V_0_empty_n == 1'b0) | (p_kernel_val_0_V_2_empty_n == 1'b0) | (p_kernel_val_0_V_1_empty_n == 1'b0) | (p_kernel_val_0_V_0_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_2_V_1_read = 1'b1;
    end else begin
        p_kernel_val_2_V_1_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_2_V_2_blk_n = p_kernel_val_2_V_2_empty_n;
    end else begin
        p_kernel_val_2_V_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_kernel_val_2_V_2_empty_n == 1'b0) | (p_kernel_val_2_V_1_empty_n == 1'b0) | (p_kernel_val_2_V_0_empty_n == 1'b0) | (p_kernel_val_1_V_2_empty_n == 1'b0) | (p_kernel_val_1_V_1_empty_n == 1'b0) | (p_kernel_val_1_V_0_empty_n == 1'b0) | (p_kernel_val_0_V_2_empty_n == 1'b0) | (p_kernel_val_0_V_1_empty_n == 1'b0) | (p_kernel_val_0_V_0_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_kernel_val_2_V_2_read = 1'b1;
    end else begin
        p_kernel_val_2_V_2_read = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_2_i_reg_1628 == 1'd1) & (icmp_reg_1633 == 1'd1) & (or_cond_i_i_i_reg_1762 == 1'd1) & (exitcond388_i_i_reg_1730_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((or_cond_i_i_i_reg_1762 == 1'd1) & (icmp_reg_1633 == 1'd0) & (exitcond388_i_i_reg_1730_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        p_src_data_stream_V_blk_n = p_src_data_stream_V_empty_n;
    end else begin
        p_src_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_predicate_op177_read_state7 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_predicate_op176_read_state7 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        p_src_data_stream_V_read = 1'b1;
    end else begin
        p_src_data_stream_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((p_kernel_val_2_V_2_empty_n == 1'b0) | (p_kernel_val_2_V_1_empty_n == 1'b0) | (p_kernel_val_2_V_0_empty_n == 1'b0) | (p_kernel_val_1_V_2_empty_n == 1'b0) | (p_kernel_val_1_V_1_empty_n == 1'b0) | (p_kernel_val_1_V_0_empty_n == 1'b0) | (p_kernel_val_0_V_2_empty_n == 1'b0) | (p_kernel_val_0_V_1_empty_n == 1'b0) | (p_kernel_val_0_V_0_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond389_i_i_fu_572_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1)) & ~((ap_enable_reg_pp0_iter9 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter10 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((ap_enable_reg_pp0_iter9 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter10 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ImagLoc_x_fu_896_p2 = ($signed(32'd4294967295) + $signed(t_V_1_reg_470));

assign OP2_V_0_1_i_fu_528_p1 = $signed(p_kernel_val_0_V_1_dout);

assign OP2_V_0_2_i_fu_532_p1 = $signed(p_kernel_val_0_V_2_dout);

assign OP2_V_0_i_fu_524_p1 = $signed(p_kernel_val_0_V_0_dout);

assign OP2_V_1_1_i_fu_540_p1 = $signed(p_kernel_val_1_V_1_dout);

assign OP2_V_1_2_i_fu_544_p1 = $signed(p_kernel_val_1_V_2_dout);

assign OP2_V_1_i_fu_536_p1 = $signed(p_kernel_val_1_V_0_dout);

assign OP2_V_2_1_i_fu_552_p1 = $signed(p_kernel_val_2_V_1_dout);

assign OP2_V_2_2_i_fu_556_p1 = $signed(p_kernel_val_2_V_2_dout);

assign OP2_V_2_i_fu_548_p1 = $signed(p_kernel_val_2_V_0_dout);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter2 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op177_read_state7 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op176_read_state7 == 1'b1)))) | ((or_cond_i_i_reg_1758_pp0_iter9_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter2 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op177_read_state7 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op176_read_state7 == 1'b1)))) | ((or_cond_i_i_reg_1758_pp0_iter9_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter2 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op177_read_state7 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op176_read_state7 == 1'b1)))) | ((or_cond_i_i_reg_1758_pp0_iter9_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((p_kernel_val_2_V_2_empty_n == 1'b0) | (p_kernel_val_2_V_1_empty_n == 1'b0) | (p_kernel_val_2_V_0_empty_n == 1'b0) | (p_kernel_val_1_V_2_empty_n == 1'b0) | (p_kernel_val_1_V_1_empty_n == 1'b0) | (p_kernel_val_1_V_0_empty_n == 1'b0) | (p_kernel_val_0_V_2_empty_n == 1'b0) | (p_kernel_val_0_V_1_empty_n == 1'b0) | (p_kernel_val_0_V_0_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state15_pp0_stage0_iter10 = ((or_cond_i_i_reg_1758_pp0_iter9_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0));
end

assign ap_block_state5_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_pp0_stage0_iter2 = (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op177_read_state7 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op176_read_state7 == 1'b1)));
end

assign ap_block_state8_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1268 = ((or_cond_i_i_i_reg_1762_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_predicate_op176_read_state7 = ((or_cond_i_i_i_reg_1762 == 1'd1) & (icmp_reg_1633 == 1'd0) & (exitcond388_i_i_reg_1730_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op177_read_state7 = ((tmp_2_i_reg_1628 == 1'd1) & (icmp_reg_1633 == 1'd1) & (or_cond_i_i_i_reg_1762 == 1'd1) & (exitcond388_i_i_reg_1730_pp0_iter1_reg == 1'd0));
end

assign brmerge_i_fu_991_p2 = (tmp_6_i_fu_942_p2 | tmp_48_0_not_i_reg_1710);

assign col_assign_1_fu_996_p2 = (tmp_11_i_fu_506_p2 - x_reg_1766);

assign col_buf_0_val_0_0_fu_1039_p3 = ((brmerge_i_reg_1772_pp0_iter2_reg[0:0] === 1'b1) ? k_buf_0_val_3_q0 : tmp_3_fu_1028_p5);

assign col_buf_0_val_1_0_fu_1057_p3 = ((brmerge_i_reg_1772_pp0_iter2_reg[0:0] === 1'b1) ? k_buf_0_val_4_q0 : tmp_4_fu_1046_p5);

assign col_buf_0_val_2_0_fu_1075_p3 = ((brmerge_i_reg_1772_pp0_iter2_reg[0:0] === 1'b1) ? k_buf_0_val_5_q0 : tmp_5_fu_1064_p5);

assign exitcond388_i_i_fu_869_p2 = ((t_V_1_reg_470 == tmp_i_fu_488_p2) ? 1'b1 : 1'b0);

assign exitcond389_i_i_fu_572_p2 = ((t_V_reg_459 == tmp_1_i_fu_494_p2) ? 1'b1 : 1'b0);

assign grp_fu_1417_p0 = grp_fu_1417_p00;

assign grp_fu_1417_p00 = src_kernel_win_0_va_4_fu_288;

assign grp_fu_1417_p1 = OP2_V_0_1_i_reg_1575;

assign grp_fu_1424_p0 = grp_fu_1424_p00;

assign grp_fu_1424_p00 = src_kernel_win_0_va_8_fu_1154_p3;

assign grp_fu_1424_p1 = OP2_V_0_2_i_reg_1580;

assign grp_fu_1431_p0 = grp_fu_1431_p00;

assign grp_fu_1431_p00 = src_kernel_win_0_va_2_fu_280;

assign grp_fu_1431_p1 = OP2_V_1_1_i_reg_1590;

assign grp_fu_1438_p0 = grp_fu_1438_p00;

assign grp_fu_1438_p00 = src_kernel_win_0_va_1_fu_276;

assign grp_fu_1438_p1 = OP2_V_2_i_reg_1600;

assign i_V_fu_577_p2 = (t_V_reg_459 + 32'd1);

assign icmp1_fu_890_p2 = ((tmp_23_fu_880_p4 != 31'd0) ? 1'b1 : 1'b0);

assign icmp_fu_598_p2 = ((tmp_11_fu_588_p4 != 31'd0) ? 1'b1 : 1'b0);

assign j_V_fu_874_p2 = (t_V_1_reg_470 + 32'd1);

assign k_buf_0_val_3_address0 = tmp_58_i_fu_1000_p1;

assign k_buf_0_val_4_address0 = tmp_58_i_fu_1000_p1;

assign k_buf_0_val_5_address0 = tmp_58_i_fu_1000_p1;

assign not_i_i_i_i_fu_1380_p2 = ((p_Result_3_i_i_i_fu_1370_p4 != 12'd0) ? 1'b1 : 1'b0);

assign or_cond_i424_i_1_i_fu_753_p2 = (tmp_120_1_i_fu_749_p2 & rev1_fu_743_p2);

assign or_cond_i424_i_2_i_fu_784_p2 = (tmp_120_2_i_fu_780_p2 & rev2_fu_774_p2);

assign or_cond_i424_i_i_fu_722_p2 = (tmp_120_i_fu_718_p2 & rev_fu_712_p2);

assign or_cond_i_i_fu_932_p2 = (icmp_reg_1633 & icmp1_fu_890_p2);

assign or_cond_i_i_i_fu_946_p2 = (tmp_6_i_fu_942_p2 & rev3_fu_937_p2);

assign overflow_fu_1391_p2 = (tmp_2_i_i_i_fu_1386_p2 & not_i_i_i_i_reg_1972);

assign p_Result_3_i_i_i_fu_1370_p4 = {{p_Val2_2_fu_1351_p2[19:8]}};

assign p_Val2_1_fu_1365_p2 = (tmp_32_reg_1956 + tmp_2_fu_1347_p2);

assign p_Val2_2_fu_1351_p2 = ($signed(tmp_140_2_2_i_fu_1344_p1) + $signed(p_Val2_4_2_1_cast_s_fu_1341_p1));

assign p_Val2_4_0_1_cast_s_fu_1266_p1 = p_Val2_4_0_1_i_reg_1894;

assign p_Val2_4_1_cast_i_fu_1304_p1 = $signed(p_Val2_4_1_i_reg_1911);

assign p_Val2_4_1_i_fu_1276_p2 = ($signed(p_Val2_4_0_1_cast_s_fu_1266_p1) + $signed(tmp19_cast_fu_1269_p1));

assign p_Val2_4_2_1_cast_s_fu_1341_p1 = $signed(p_Val2_4_2_1_i_reg_1946);

assign p_Val2_4_2_1_i_fu_1323_p2 = ($signed(tmp12_fu_1310_p2) + $signed(tmp23_cast_fu_1316_p1));

assign p_assign_1_fu_918_p2 = (32'd1 - t_V_1_reg_470);

assign p_assign_2_fu_956_p2 = (tmp_10_i_fu_566_p2 - p_p2_i_i_i_reg_1751);

assign p_assign_3_fu_960_p3 = ((or_cond_i_i_i_fu_946_p2[0:0] === 1'b1) ? ImagLoc_x_reg_1739 : p_assign_2_fu_956_p2);

assign p_assign_6_1_i_fu_649_p2 = ($signed(32'd4294967294) + $signed(t_V_reg_459));

assign p_assign_6_2_i_fu_677_p2 = ($signed(32'd4294967293) + $signed(t_V_reg_459));

assign p_assign_7_1_i_fu_663_p2 = (32'd2 - t_V_reg_459);

assign p_assign_7_2_i_fu_691_p2 = (32'd3 - t_V_reg_459);

assign p_assign_7_i_fu_635_p2 = (32'd1 - t_V_reg_459);

assign p_assign_8_1_i_fu_763_p2 = (tmp_135_i_fu_518_p2 - p_p2_i425_i_1_i_reg_1674);

assign p_assign_8_2_i_fu_794_p2 = (tmp_135_i_fu_518_p2 - p_p2_i425_i_2_i_reg_1688);

assign p_assign_8_i_fu_732_p2 = (tmp_135_i_fu_518_p2 - p_p2_i425_i_i_reg_1660);

assign p_dst_data_stream_V_din = ((tmp_i_i_i_fu_1404_p2[0:0] === 1'b1) ? p_mux_i_i_cast_i_fu_1396_p3 : p_Val2_1_reg_1967);

assign p_mux_i_i_cast_i_fu_1396_p3 = ((tmp_2_i_i_i_fu_1386_p2[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign p_neg393_i_i_fu_500_p2 = ($signed(32'd4294967295) + $signed(p_src_rows_V));

assign p_p2_i425_i_1_i_fu_669_p3 = ((tmp_17_fu_655_p3[0:0] === 1'b1) ? p_assign_7_1_i_fu_663_p2 : p_assign_6_1_i_fu_649_p2);

assign p_p2_i425_i_1_i_p_ass_fu_812_p3 = ((tmp_132_1_i_fu_759_p2[0:0] === 1'b1) ? p_p2_i425_i_1_i_reg_1674 : p_assign_8_1_i_fu_763_p2);

assign p_p2_i425_i_2_i_fu_697_p3 = ((tmp_19_fu_683_p3[0:0] === 1'b1) ? p_assign_7_2_i_fu_691_p2 : p_assign_6_2_i_fu_677_p2);

assign p_p2_i425_i_2_i_p_ass_fu_826_p3 = ((tmp_132_2_i_fu_790_p2[0:0] === 1'b1) ? p_p2_i425_i_2_i_reg_1688 : p_assign_8_2_i_fu_794_p2);

assign p_p2_i425_i_i_fu_641_p3 = ((tmp_13_fu_627_p3[0:0] === 1'b1) ? p_assign_7_i_fu_635_p2 : tmp_118_i_fu_621_p2);

assign p_p2_i425_i_i_p_assig_fu_798_p3 = ((tmp_132_i_fu_728_p2[0:0] === 1'b1) ? p_p2_i425_i_i_reg_1660 : p_assign_8_i_fu_732_p2);

assign p_p2_i_i_i_fu_924_p3 = ((tmp_25_fu_910_p3[0:0] === 1'b1) ? p_assign_1_fu_918_p2 : ImagLoc_x_fu_896_p2);

assign r_V_2_0_i_fu_1210_p0 = r_V_2_0_i_fu_1210_p00;

assign r_V_2_0_i_fu_1210_p00 = src_kernel_win_0_va_5_fu_292;

assign r_V_2_0_i_fu_1210_p1 = OP2_V_0_i_reg_1570;

assign r_V_2_0_i_fu_1210_p2 = ($signed({{1'b0}, {r_V_2_0_i_fu_1210_p0}}) * $signed(r_V_2_0_i_fu_1210_p1));

assign r_V_2_1_2_i_fu_1285_p0 = r_V_2_1_2_i_fu_1285_p00;

assign r_V_2_1_2_i_fu_1285_p00 = src_kernel_win_0_va_7_reg_1844_pp0_iter6_reg;

assign r_V_2_1_2_i_fu_1285_p1 = OP2_V_1_2_i_reg_1595;

assign r_V_2_1_2_i_fu_1285_p2 = ($signed({{1'b0}, {r_V_2_1_2_i_fu_1285_p0}}) * $signed(r_V_2_1_2_i_fu_1285_p1));

assign r_V_2_1_i_fu_1219_p0 = r_V_2_1_i_fu_1219_p00;

assign r_V_2_1_i_fu_1219_p00 = src_kernel_win_0_va_3_fu_284;

assign r_V_2_1_i_fu_1219_p1 = OP2_V_1_i_reg_1585;

assign r_V_2_1_i_fu_1219_p2 = ($signed({{1'b0}, {r_V_2_1_i_fu_1219_p0}}) * $signed(r_V_2_1_i_fu_1219_p1));

assign r_V_2_2_1_i_fu_1232_p0 = r_V_2_2_1_i_fu_1232_p00;

assign r_V_2_2_1_i_fu_1232_p00 = src_kernel_win_0_va_fu_272;

assign r_V_2_2_1_i_fu_1232_p1 = OP2_V_2_1_i_reg_1605;

assign r_V_2_2_1_i_fu_1232_p2 = ($signed({{1'b0}, {r_V_2_2_1_i_fu_1232_p0}}) * $signed(r_V_2_2_1_i_fu_1232_p1));

assign r_V_2_2_2_i_fu_1332_p0 = r_V_2_2_2_i_fu_1332_p00;

assign r_V_2_2_2_i_fu_1332_p00 = src_kernel_win_0_va_6_reg_1838_pp0_iter7_reg;

assign r_V_2_2_2_i_fu_1332_p1 = OP2_V_2_2_i_reg_1610;

assign r_V_2_2_2_i_fu_1332_p2 = ($signed({{1'b0}, {r_V_2_2_2_i_fu_1332_p0}}) * $signed(r_V_2_2_2_i_fu_1332_p1));

assign rev1_fu_743_p2 = (tmp_16_fu_736_p3 ^ 1'd1);

assign rev2_fu_774_p2 = (tmp_18_fu_767_p3 ^ 1'd1);

assign rev3_fu_937_p2 = (tmp_24_reg_1745 ^ 1'd1);

assign rev_fu_712_p2 = (tmp_12_fu_705_p3 ^ 1'd1);

assign row_assign_8_1_i_fu_853_p2 = (p_neg393_i_i_fu_500_p2 - y_1_1_i_reg_1700);

assign row_assign_8_2_i_fu_861_p2 = (p_neg393_i_i_fu_500_p2 - y_1_2_i_reg_1705);

assign row_assign_8_i_fu_845_p2 = (p_neg393_i_i_fu_500_p2 - y_1_i_reg_1695);

assign sel_tmp7_fu_973_p2 = (tmp_6_i_not_fu_967_p2 | tmp_24_reg_1745);

assign sel_tmp8_fu_978_p2 = (tmp_8_i_fu_952_p2 & sel_tmp7_fu_973_p2);

assign src_kernel_win_0_va_6_fu_1126_p3 = ((tmp_115_i_reg_1646[0:0] === 1'b1) ? tmp_6_fu_1118_p5 : col_buf_0_val_0_0_reg_1809);

assign src_kernel_win_0_va_7_fu_1140_p3 = ((tmp_115_i_reg_1646[0:0] === 1'b1) ? tmp_7_fu_1132_p5 : col_buf_0_val_1_0_reg_1822);

assign src_kernel_win_0_va_8_fu_1154_p3 = ((tmp_115_i_reg_1646[0:0] === 1'b1) ? tmp_8_fu_1146_p5 : col_buf_0_val_2_0_reg_1830);

assign tmp12_fu_1310_p2 = ($signed(tmp_140_1_2_cast_i_fu_1307_p1) + $signed(p_Val2_4_1_cast_i_fu_1304_p1));

assign tmp19_cast_fu_1269_p1 = tmp9_reg_1900;

assign tmp23_cast_fu_1316_p1 = tmp14_reg_1931;

assign tmp_10_i_fu_566_p2 = ($signed(32'd4294967294) + $signed(tmp_9_fu_560_p2));

assign tmp_115_i_fu_616_p2 = ((t_V_reg_459 > p_src_rows_V) ? 1'b1 : 1'b0);

assign tmp_118_i_fu_621_p2 = ($signed(32'd4294967295) + $signed(t_V_reg_459));

assign tmp_11_fu_588_p4 = {{t_V_reg_459[31:1]}};

assign tmp_11_i_fu_506_p2 = (32'd3 + p_src_cols_V);

assign tmp_120_1_i_fu_749_p2 = (($signed(p_assign_6_1_i_reg_1667) < $signed(p_src_rows_V)) ? 1'b1 : 1'b0);

assign tmp_120_2_i_fu_780_p2 = (($signed(p_assign_6_2_i_reg_1681) < $signed(p_src_rows_V)) ? 1'b1 : 1'b0);

assign tmp_120_i_fu_718_p2 = (($signed(tmp_118_i_reg_1653) < $signed(p_src_rows_V)) ? 1'b1 : 1'b0);

assign tmp_12_fu_705_p3 = tmp_118_i_reg_1653[32'd31];

assign tmp_132_1_i_fu_759_p2 = (($signed(p_p2_i425_i_1_i_reg_1674) < $signed(p_src_rows_V)) ? 1'b1 : 1'b0);

assign tmp_132_2_i_fu_790_p2 = (($signed(p_p2_i425_i_2_i_reg_1688) < $signed(p_src_rows_V)) ? 1'b1 : 1'b0);

assign tmp_132_i_fu_728_p2 = (($signed(p_p2_i425_i_i_reg_1660) < $signed(p_src_rows_V)) ? 1'b1 : 1'b0);

assign tmp_135_i_fu_518_p2 = (32'd2 + tmp_fu_512_p2);

assign tmp_13_fu_627_p3 = tmp_118_i_fu_621_p2[32'd31];

assign tmp_140_1_2_cast_i_fu_1307_p1 = r_V_2_1_2_i_reg_1916;

assign tmp_140_2_2_i_fu_1344_p1 = r_V_2_2_2_i_reg_1951;

assign tmp_16_fu_736_p3 = p_assign_6_1_i_reg_1667[32'd31];

assign tmp_17_fu_655_p3 = p_assign_6_1_i_fu_649_p2[32'd31];

assign tmp_18_fu_767_p3 = p_assign_6_2_i_reg_1681[32'd31];

assign tmp_19_fu_683_p3 = p_assign_6_2_i_fu_677_p2[32'd31];

assign tmp_1_fu_1319_p2 = (tmp_29_reg_1921 + tmp_30_reg_1926);

assign tmp_1_i_fu_494_p2 = (32'd2 + p_src_rows_V);

assign tmp_20_fu_849_p1 = row_assign_8_i_fu_845_p2[1:0];

assign tmp_21_fu_857_p1 = row_assign_8_1_i_fu_853_p2[1:0];

assign tmp_22_fu_865_p1 = row_assign_8_2_i_fu_861_p2[1:0];

assign tmp_23_fu_880_p4 = {{t_V_1_reg_470[31:1]}};

assign tmp_25_fu_910_p3 = ImagLoc_x_fu_896_p2[32'd31];

assign tmp_26_fu_1006_p1 = col_assign_1_fu_996_p2[1:0];

assign tmp_29_fu_1290_p1 = tmp_s_fu_1272_p2[7:0];

assign tmp_2_fu_1347_p2 = (tmp_31_reg_1936_pp0_iter8_reg + tmp_1_reg_1941);

assign tmp_2_i_fu_583_p2 = ((t_V_reg_459 < p_src_rows_V) ? 1'b1 : 1'b0);

assign tmp_2_i_i_i_fu_1386_p2 = (isneg_reg_1961 ^ 1'd1);

assign tmp_30_fu_1294_p1 = r_V_2_1_2_i_fu_1285_p2[7:0];

assign tmp_31_fu_1301_p1 = grp_fu_1438_p3[7:0];

assign tmp_32_fu_1337_p1 = r_V_2_2_2_i_fu_1332_p2[7:0];

assign tmp_48_0_not_i_fu_840_p2 = (tmp_2_i_reg_1628 ^ 1'd1);

assign tmp_58_i_fu_1000_p1 = x_reg_1766;

assign tmp_6_i_fu_942_p2 = (($signed(ImagLoc_x_reg_1739) < $signed(p_src_cols_V)) ? 1'b1 : 1'b0);

assign tmp_6_i_not_fu_967_p2 = (tmp_6_i_fu_942_p2 ^ 1'd1);

assign tmp_8_i_fu_952_p2 = (($signed(p_p2_i_i_i_reg_1751) < $signed(p_src_cols_V)) ? 1'b1 : 1'b0);

assign tmp_93_1_i_fu_610_p2 = ((t_V_reg_459 == 32'd0) ? 1'b1 : 1'b0);

assign tmp_93_i_fu_604_p2 = ((t_V_reg_459 == 32'd1) ? 1'b1 : 1'b0);

assign tmp_9_fu_560_p2 = p_src_cols_V << 32'd1;

assign tmp_fu_512_p2 = p_src_rows_V << 32'd1;

assign tmp_i_fu_488_p2 = (32'd2 + p_src_cols_V);

assign tmp_i_i_i_fu_1404_p2 = (overflow_fu_1391_p2 | isneg_reg_1961);

assign tmp_s_fu_1272_p2 = ($signed(tmp9_reg_1900) + $signed(p_Val2_4_0_1_i_reg_1894));

assign x_fu_984_p3 = ((sel_tmp8_fu_978_p2[0:0] === 1'b1) ? p_p2_i_i_i_reg_1751 : p_assign_3_fu_960_p3);

assign y_1_1_i_fu_819_p3 = ((or_cond_i424_i_1_i_fu_753_p2[0:0] === 1'b1) ? p_assign_6_1_i_reg_1667 : p_p2_i425_i_1_i_p_ass_fu_812_p3);

assign y_1_2_i_fu_833_p3 = ((or_cond_i424_i_2_i_fu_784_p2[0:0] === 1'b1) ? p_assign_6_2_i_reg_1681 : p_p2_i425_i_2_i_p_ass_fu_826_p3);

assign y_1_i_fu_805_p3 = ((or_cond_i424_i_i_fu_722_p2[0:0] === 1'b1) ? tmp_118_i_reg_1653 : p_p2_i425_i_i_p_assig_fu_798_p3);

endmodule //Filter2D
